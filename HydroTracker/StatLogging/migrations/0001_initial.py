# Generated by Django 4.2.7 on 2023-11-20 00:03

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DosingGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_of_growth', models.CharField(choices=[('Cuttings/Seedlings', 'Cuttings/Seedlings'), ('Vegetative', 'Vegetative'), ('Flowering', 'Flowering'), ('Fruiting', 'Fruiting')], max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('dosing_amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dosing_amount_unit', models.CharField(choices=[('L', 'Liter'), ('mL', 'Milliliter'), ('gal', 'Gallon'), ('fl oz', 'Fluid Ounce'), ('pt', 'Pint'), ('qt', 'Quart'), ('cup', 'Cup'), ('tbsp', 'Tablespoon'), ('tsp', 'Teaspoon')], default='mL', max_length=10)),
                ('dosing_per_volume', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dosing_volume_unit', models.CharField(choices=[('L', 'Liter'), ('mL', 'Milliliter'), ('gal', 'Gallon'), ('fl oz', 'Fluid Ounce'), ('pt', 'Pint'), ('qt', 'Quart'), ('cup', 'Cup'), ('tbsp', 'Tablespoon'), ('tsp', 'Teaspoon')], default='gal', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Grow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('stage', models.CharField(choices=[('Cuttings/Seedlings', 'Cuttings/Seedlings'), ('Vegetative', 'Vegetative'), ('Flowering', 'Flowering'), ('Fruiting', 'Fruiting')], default='Vegetative', max_length=50)),
            ],
            options={
                'verbose_name': 'Grow',
                'verbose_name_plural': 'Grows',
            },
        ),
        migrations.CreateModel(
            name='MeasurementDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('serial_number', models.CharField(max_length=50)),
                ('purchase_date', models.DateField()),
                ('calibration_frequency', models.IntegerField(default=3)),
                ('calibration_frequency_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months'), ('YEARS', 'Years')], default='MONTHS', max_length=50)),
                ('last_calibration_date', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Measurement Device',
                'verbose_name_plural': 'Measurement Devices',
            },
        ),
        migrations.CreateModel(
            name='NutrientProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reservoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reservoir_type', models.CharField(choices=[('HYDRO', 'Hydroponic'), ('NUTRIENT', 'Nutrient'), ('WATER', 'Water Storage'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('creation_date', models.DateField(default=django.utils.timezone.now)),
                ('grow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservoirs', to='StatLogging.grow')),
            ],
            options={
                'verbose_name': 'Reservoir',
                'verbose_name_plural': 'Reservoirs',
            },
        ),
        migrations.CreateModel(
            name='FeedingSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('dosing_guides', models.ManyToManyField(related_name='feeding_schedules', to='StatLogging.dosingguide')),
                ('grow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feeding_schedules', to='StatLogging.grow')),
            ],
        ),
        migrations.AddField(
            model_name='dosingguide',
            name='nutrient_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dosing_guides', to='StatLogging.nutrientproduct'),
        ),
        migrations.CreateModel(
            name='Dosing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('feeding_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dosings', to='StatLogging.feedingschedule')),
                ('reservoir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dosings', to='StatLogging.reservoir')),
            ],
            options={
                'verbose_name': 'Dosing',
                'verbose_name_plural': 'Dosings',
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_type', models.CharField(choices=[('PH', 'pH'), ('EC', 'EC')], default='PH', max_length=10)),
                ('reading', models.DecimalField(decimal_places=2, max_digits=5)),
                ('unit', models.CharField(blank=True, choices=[('mS/cm', 'Millisiemens per centimeter (mS/cm)'), ('µS/cm', 'Microsiemens per centimeter (µS/cm)'), ('ppm', 'Parts per million (ppm)')], max_length=10, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='device_readings', to='StatLogging.measurementdevice')),
                ('reservoir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='StatLogging.reservoir')),
            ],
            options={
                'verbose_name': 'Reading',
                'verbose_name_plural': 'Readings',
                'unique_together': {('date', 'device', 'reservoir')},
            },
        ),
    ]
